{"version":3,"file":"ja-fetch.min.js","sources":["../src/utils.js","../src/coreFetch.js","../src/interceptors.js","../src/service.js","../src/index.js"],"sourcesContent":["/**\r\n * 拼接url参数\r\n * @param {string} url url字符串\r\n * @param {Object} params url参数对象\r\n * @returns {string}\r\n */\r\nexport function createUrlParamStr(url, params) {\r\n  let tmpUrl = new URL(url, window.location) // 如果是url是相对路径，则会加上第二个参数\r\n  for (const key in params) {\r\n    tmpUrl.searchParams.append(key, params[key])\r\n  }\r\n  return tmpUrl.href\r\n}\r\n\r\n/**\r\n * 检查interceptors onRejected 方法的返回\r\n * @param {any} rejectedFuncReturn\r\n * @param {'request' | 'response'} type\r\n * @param {object} errObj\r\n * @returns\r\n */\r\nexport function checkInterceptorsReturn(rejectedFuncReturn, type, errObj) {\r\n  // 校验onRejected 的返回值，希望onRejected 函数必须返回一个Promise\r\n  if (rejectedFuncReturn instanceof Promise) {\r\n    return rejectedFuncReturn\r\n  } else {\r\n    console.warn(\r\n      `${type}.interceptor.use(onFulfilled, onRejected): onRejected function not return Promise. Use Promise.reject() to jump to next ${type} interceptor's onRejected Function`,\r\n    )\r\n    // reject()\r\n    return Promise.reject(errObj)\r\n  }\r\n}\r\n","import { createUrlParamStr } from './utils.js'\r\n\r\n/**\r\n * @param {string | Request} url url\r\n * @param {object} config fetch init obj\r\n * @returns {Promise<Response>}\r\n */\r\nexport default function coreFetch(url, config) {\r\n  // TODO: 判断url类型\r\n  const params = config.params\r\n  // 拼url参数\r\n  if (params) url = createUrlParamStr(url, params)\r\n\r\n  if (config.body) {\r\n    // conf.body is object\r\n    if (!(config.body instanceof FormData) && typeof config.body === 'object') {\r\n      config.headers = Object.assign(\r\n        {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        config.headers || {},\r\n      )\r\n      try {\r\n        config.body = JSON.stringify(config.body)\r\n      } catch (e) {\r\n        throw new Error('cannot stringify body json')\r\n      }\r\n    }\r\n  }\r\n  if (!config.credentials) config.credentials = 'same-origin' // 自 2017 年 8 月 25 日以后，默认的 credentials 政策变更为 same-origin\r\n\r\n  return fetch(url, config)\r\n}\r\n","class Interceptor {\r\n  /** @type {{ id: string, onFulfilled: function, onRejected: function }[]} */\r\n  store = []\r\n  /**\r\n   *\r\n   * @param {(data: any, {url: string, config: object}, response: Response) => Promise} onFulfilled\r\n   * @param {(err: {url: string, config: object}) => Promise} onRejected\r\n   * @returns {number}\r\n   */\r\n  use(onFulfilled, onRejected) {\r\n    if (onFulfilled && typeof onFulfilled !== 'function') {\r\n      throw new TypeError('interceptor.use(onFulfilled, onRejected), parameter onFulfilled is not a function')\r\n    }\r\n    if (onRejected && typeof onRejected !== 'function') {\r\n      throw new TypeError('interceptor.use(onFulfilled, onRejected), parameter onRejected is not a function')\r\n    }\r\n    this.onFulfilled = onFulfilled\r\n    this.onRejected = onRejected\r\n\r\n    const id = Date.now()\r\n    // TODO: Order to sort\r\n    this.store.push({ id, onFulfilled, onRejected }) // store\r\n    return id\r\n  }\r\n  /**\r\n   * if !id , remove all Interceptor\r\n   * @param {number} id\r\n   */\r\n  remove(id) {\r\n    if (id) {\r\n      this.store = this.store.filter(it => it.id === id)\r\n    } else {\r\n      console.warn('Remove all Interceptor')\r\n      this.store = []\r\n    }\r\n  }\r\n}\r\nexport default class Interceptors {\r\n  request = new Interceptor()\r\n  response = new Interceptor()\r\n  /**\r\n   * 拦截器预设\r\n   * @param {{install(interceptors:Interceptors)}} obj\r\n   */\r\n  use(obj) {\r\n    const interceptors = new Interceptors()\r\n    obj.install(interceptors)\r\n\r\n    interceptors.request.store.forEach(item => {\r\n      this.request.use(item.onFulfilled, item.onRejected)\r\n    })\r\n    interceptors.response.store.forEach(item => {\r\n      this.response.use(item.onFulfilled, item.onRejected)\r\n    })\r\n    // release interceptors?\r\n  }\r\n  create() {\r\n    return new Interceptors()\r\n  }\r\n}\r\n","import coreFetch from './coreFetch.js'\r\nimport Interceptors from './interceptors.js'\r\nimport { checkInterceptorsReturn } from './utils.js'\r\n\r\nexport default class Service {\r\n  #defaultConf = {\r\n    headers: {},\r\n  }\r\n  interceptors = new Interceptors()\r\n  /**\r\n   * @param {object} defaultConf\r\n   */\r\n  constructor(defaultConf) {\r\n    this.#defaultConf = Object.assign({}, this.#defaultConf, defaultConf)\r\n  }\r\n  /** create a new service */\r\n  create(config) {\r\n    return new Service(config)\r\n  }\r\n  /**\r\n   *\r\n   * @param {string} url\r\n   * @param {object} config\r\n   */\r\n  #requestAdapter(url, config) {\r\n    const reqInterceptor = this.interceptors.request // 请求拦截器\r\n    const resInterceptor = this.interceptors.response // 响应拦截器\r\n    let assignedConf = Object.assign({}, this.#defaultConf, config)\r\n\r\n    // 请求拦截器 multi\r\n    if (reqInterceptor.store.length) {\r\n      if (!assignedConf.headers) assignedConf.headers = {} // 没有headers就给一个空对象，便于拦截器中config.headers.xxx来使用\r\n      reqInterceptor.store.forEach(item => {\r\n        // TODO: async await\r\n        let returnConf = item.onFulfilled(url, assignedConf) // 请求拦截器中修改请求配置\r\n        if (returnConf) assignedConf = returnConf // 考虑使用拦截器的的时候直接修改形参option.来修改配置对象，且不返回的情况\r\n      })\r\n    }\r\n\r\n    const requestInfo = { url, config: assignedConf }\r\n\r\n    // return new Promise((resolve, reject) => {\r\n    return coreFetch(url, assignedConf).then(\r\n      response => {\r\n        if (response.ok) {\r\n          const responseType = assignedConf.responseType\r\n          let prom\r\n          if (responseType === 'blob') prom = response.blob()\r\n          else if (responseType === 'text') prom = response.text()\r\n          else if (responseType === 'arraybuffer') prom = response.arrayBuffer()\r\n          else if (responseType === 'response') prom = response\r\n          // response.body\r\n          else prom = response.json()\r\n\r\n          /**\r\n           * 添加响应拦截器\r\n           * 第一个拦截器中onFulfilled中的异常由下一个拦截器的onRejected处理\r\n           */\r\n          resInterceptor.store.forEach(item => {\r\n            prom = prom.then(\r\n              data => item.onFulfilled(data, requestInfo, response), // 可能要把response对象传给拦截器使用\r\n              err =>\r\n                item.onRejected\r\n                  ? item.onRejected(err).then(res => checkInterceptorsReturn(res, 'response'))\r\n                  : Promise.reject(err),\r\n            )\r\n          })\r\n          // prom = prom.then(resolve).catch(reject)\r\n\r\n          return prom\r\n        } else {\r\n          // -------------响应错误\r\n          const errObj = { response, ...requestInfo }\r\n          // 错误交给拦截器处理\r\n          let resInterceptorRejectPromise = Promise.reject(errObj)\r\n          resInterceptor.store.forEach(item => {\r\n            resInterceptorRejectPromise = resInterceptorRejectPromise\r\n              .catch(err => (item.onRejected ? item.onRejected(err) : Promise.reject(err)))\r\n              .then(res => checkInterceptorsReturn(res, 'response', errObj))\r\n          })\r\n          return resInterceptorRejectPromise\r\n        }\r\n      },\r\n      err => {\r\n        // -------------请求错误,(浏览器阻止请求)\r\n        const errObj = { err, ...requestInfo }\r\n        // 构建catch链\r\n        let reqInterceptorRejectPromise = Promise.reject(errObj)\r\n        reqInterceptor.store.forEach(item => {\r\n          reqInterceptorRejectPromise = reqInterceptorRejectPromise\r\n            .catch(err => (item.onRejected ? item.onRejected(err) : Promise.reject(err)))\r\n            .then(res => checkInterceptorsReturn(res, 'request', errObj))\r\n        })\r\n        return reqInterceptorRejectPromise\r\n      },\r\n    )\r\n    // })\r\n  }\r\n\r\n  get(url, config = {}) {\r\n    config.method = 'GET'\r\n    return this.#requestAdapter(url, config)\r\n  }\r\n  post(url, config = {}) {\r\n    config.method = 'POST'\r\n    return this.#requestAdapter(url, config)\r\n  }\r\n  put(url, config = {}) {\r\n    config.method = 'PUT'\r\n    return this.#requestAdapter(url, config)\r\n  }\r\n  del(url, config = {}) {\r\n    config.method = 'DELETE'\r\n    return this.#requestAdapter(url, config)\r\n  }\r\n}\r\n","/** ************\r\n * fetch 包装\r\n * TODO: timeout\r\n * 取消请求可使用abortController()\r\n ***********/\r\n\r\nimport Service from './service.js'\r\n\r\nlet service = new Service()\r\nexport default service\r\n"],"names":["checkInterceptorsReturn","rejectedFuncReturn","type","errObj","Promise","console","warn","reject","coreFetch","url","config","params","tmpUrl","URL","window","location","key","searchParams","append","href","createUrlParamStr","body","FormData","headers","Object","assign","JSON","stringify","e","Error","credentials","fetch","Interceptor","store","use","onFulfilled","onRejected","TypeError","this","id","Date","now","push","remove","filter","it","Interceptors","request","response","obj","interceptors","install","forEach","item","create","Service","defaultConf","constructor","requestAdapter","reqInterceptor","resInterceptor","assignedConf","length","returnConf","requestInfo","then","ok","responseType","prom","blob","text","arrayBuffer","json","data","err","res","resInterceptorRejectPromise","catch","reqInterceptorRejectPromise","get","method","post","put","del","service"],"mappings":"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"}