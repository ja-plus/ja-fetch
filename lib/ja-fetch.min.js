function e(e,t,r){return e instanceof Promise?e:(console.warn(`${t}.interceptor.use(onFulfilled, onRejected): onRejected function not return Promise. Use Promise.reject() to jump to next ${t} interceptor's onRejected Function`),Promise.reject(r))}function t(e,t){const r=t.params;if(r&&(e=function(e,t){let r=new URL(e,window.location);for(const e in t)r.searchParams.append(e,t[e]);return r.href}(e,r)),t.body&&!(t.body instanceof FormData)&&"object"==typeof t.body){t.headers=Object.assign({"Content-Type":"application/json"},t.headers||{});try{t.body=JSON.stringify(t.body)}catch(e){throw new Error("cannot stringify body json")}}return t.credentials||(t.credentials="same-origin"),fetch(e,t)}class r{store=[];use(e,t){if(e&&"function"!=typeof e)throw new TypeError("interceptor.use(onFulfilled, onRejected), parameter onFulfilled is not a function");if(t&&"function"!=typeof t)throw new TypeError("interceptor.use(onFulfilled, onRejected), parameter onRejected is not a function");this.onFulfilled=e,this.onRejected=t;const r=Date.now();return this.store.push({id:r,onFulfilled:e,onRejected:t}),r}remove(e){e?this.store=this.store.filter((t=>t.id===e)):(console.warn("Remove all Interceptor"),this.store=[])}}class o{request=new r;response=new r;use(e){const t=new o;e.install(t),t.request.store.forEach((e=>{this.request.use(e.onFulfilled,e.onRejected)})),t.response.store.forEach((e=>{this.response.use(e.onFulfilled,e.onRejected)}))}create(){return new o}}class n{#e={headers:{}};interceptors=new o;constructor(e){this.#e=Object.assign({},this.#e,e)}create(e){return new n(e)}#t(r,o){const n=this.interceptors.request,s=this.interceptors.response;let c=Object.assign({},this.#e,o);if(n.store.length){c.headers||(c.headers={});try{n.store.forEach((e=>{let t=e.onFulfilled(r,c);t&&(c=t)}))}catch(e){return Promise.reject(e)}}const i={url:r,config:c};return t(r,c).then((t=>{if(t.ok){const r=c.responseType;let o;return o="blob"===r?t.blob():"text"===r?t.text():"arraybuffer"===r?t.arrayBuffer():"response"===r?t:t.json(),s.store.forEach((r=>{o=o.then((e=>r.onFulfilled(e,i,t)),(t=>r.onRejected?r.onRejected(t).then((t=>e(t,"response"))):Promise.reject(t)))})),o}{const r={response:t,...i};let o=Promise.reject(r);return s.store.forEach((t=>{o=o.catch((e=>t.onRejected?t.onRejected(e):Promise.reject(e))).then((t=>e(t,"response",r)))})),o}}),(t=>{const r={err:t,...i};let o=Promise.reject(r);return n.store.forEach((t=>{o=o.catch((e=>t.onRejected?t.onRejected(e):Promise.reject(e))).then((t=>e(t,"request",r)))})),o}))}get(e,t={}){return t.method="GET",this.#t(e,t)}post(e,t={}){return t.method="POST",this.#t(e,t)}put(e,t={}){return t.method="PUT",this.#t(e,t)}del(e,t={}){return t.method="DELETE",this.#t(e,t)}}let s=new n;export{s as default};
//# sourceMappingURL=ja-fetch.min.js.map
