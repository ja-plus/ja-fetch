function e(e,t,r){return e instanceof Promise?e:(console.warn(`${t}.interceptor.use(onFulfilled, onRejected): onRejected function not return Promise. Use Promise.reject() to jump to next ${t} interceptor's onRejected Function`),Promise.reject(r))}function t(e,t){const r=t.params;if(r&&(e=function(e,t){const r=new URL(e,window.location.origin);for(const e in t)Object.hasOwnProperty.call(t,e)&&r.searchParams.append(e,t[e]);return r.href}(e,r)),t.body&&!(t.body instanceof FormData)&&"object"==typeof t.body){t.headers=Object.assign({"Content-Type":"application/json"},t.headers||{});try{t.body=JSON.stringify(t.body)}catch(e){throw new Error("cannot stringify body json")}}return t.credentials||(t.credentials="same-origin"),fetch(e,t)}class r{constructor(){this.store=[]}use(e,t){if(e&&"function"!=typeof e)throw new TypeError("interceptor.use(onFulfilled, onRejected), parameter onFulfilled is not a function");if(t&&"function"!=typeof t)throw new TypeError("interceptor.use(onFulfilled, onRejected), parameter onRejected is not a function");this.onFulfilled=e,this.onRejected=t;const r=Date.now();return this.store.push({id:r,onFulfilled:e,onRejected:t}),r}remove(e){e?this.store=this.store.filter((t=>t.id===e)):(console.warn("Remove all Interceptor"),this.store=[])}}class o{constructor(){this.request=new r,this.response=new r}use(e){const t=new o;e.install(t),t.request.store.forEach((e=>{this.request.use(e.onFulfilled,e.onRejected)})),t.response.store.forEach((e=>{this.response.use(e.onFulfilled,e.onRejected)}))}create(){return new o}}class n{constructor(e){this.defaultConf={headers:{}},this.interceptors=new o,this.defaultConf=Object.assign({},this.defaultConf,e)}create(e){return new n(e)}requestAdapter(r,o){const n=this.interceptors.request,s=this.interceptors.response;let c=Object.assign({},this.defaultConf,o);if(n.store.length){c.headers||(c.headers={});try{n.store.forEach((e=>{const t=e.onFulfilled(r,c);t&&(c=t)}))}catch(e){return Promise.reject(e)}}const i={url:r,config:c};return t(r,c).then((t=>{if(t.ok){const r=c.responseType;let o;return o="blob"===r?t.blob():"text"===r?t.text():"arraybuffer"===r?t.arrayBuffer():"response"===r?Promise.resolve(t):t.json(),s.store.forEach((r=>{o=o.then((e=>r.onFulfilled(e,i,t)),(t=>r.onRejected?r.onRejected(t).then((r=>e(r,"response",t))):Promise.reject(t)))})),o}{const r=Object.assign({response:t},i);let o=Promise.reject(r);return s.store.forEach((t=>{o=o.catch((e=>t.onRejected?t.onRejected(e):Promise.reject(e))).then((t=>e(t,"response",r)))})),o}}),(t=>{const r=Object.assign({err:t},i);let o=Promise.reject(r);return n.store.forEach((t=>{o=o.catch((e=>t.onRejected?t.onRejected(e):Promise.reject(e))).then((t=>e(t,"request",r)))})),o}))}request(e,t={}){return this.requestAdapter(e,t)}get(e,t={}){return t.method="GET",this.requestAdapter(e,t)}post(e,t={}){return t.method="POST",this.requestAdapter(e,t)}put(e,t={}){return t.method="PUT",this.requestAdapter(e,t)}del(e,t={}){return t.method="DELETE",this.requestAdapter(e,t)}}var s=new n;export{s as default};
//# sourceMappingURL=ja-fetch.min.js.map
